#ifndef CS_PATTERNS_H
#define CS_PATTERNS_H
// * Stripes

#include <Arduino.h>

#define EIGHT_BY_EIGHT_ROW_COUNT 8

// const byte ZIG_ZAG[] = {
//      0b00000000,
//      0b00000000,
//      0b00000000,
//      0b00000000,
//      0b00000000,
//      0b00000000,
//      0b00000000,
//      0b00000000,
//      0b00110011,
//      0b01100110,
//      0b11001100,
//      0b10011001,
//      0b00110011,
//      0b01100110,
//      0b11001100,
//      0b10011001,
//      0b11001100,
//      0b10011001,
//      0b00110011,
//      0b01100110,
//      0b11001100,
//      0b10011001,
//      0b00110011,
//      0b01100110};
// const int ZIG_ZAG_LEN = sizeof(ZIG_ZAG) / 8;

// spaced Stripes
const byte SPACED_STRIPES[] = {
    0b11000110,
    0b10001100,
    0b00011000,
    0b00110001,
    0b01100011,
    0b11000110,
    0b10001100,
    0b00011000,

    0b01100011,
    0b11000110,
    0b10001100,
    0b00011000,
    0b00110001,
    0b01100011,
    0b11000110,
    0b10001100,

    0b00110001,
    0b01100011,
    0b11000110,
    0b10001100,
    0b00011000,
    0b00110001,
    0b01100011,
    0b11000110,

    0b00011000,
    0b00110001,
    0b01100011,
    0b11000110,
    0b10001100,
    0b00011000,
    0b00110001,
    0b01100011,

    0b10001100,
    0b00011000,
    0b00110001,
    0b01100011,
    0b11000110,
    0b10001100,
    0b00011000,
    0b00110001};
const int SPACED_STRIPES_LEN = sizeof(SPACED_STRIPES) / EIGHT_BY_EIGHT_ROW_COUNT; // note that the 8 refers to the groupings of elements to fit into the number of rows per frame, i.e. it's an 8x8 matrix -> it has 8 rows -> we want to count the number of 8 instances at a time

// arrow up
const byte ARROW_UP[] = {
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00011000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00011000,
    0b00111100,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00011000,
    0b00111100,
    0b01100110,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00011000,
    0b00111100,
    0b01100110,
    0b11011011,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00011000,
    0b00111100,
    0b01100110,
    0b11011011,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00011000,
    0b00111100,
    0b01100110,
    0b11011011,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00011000,
    0b00111100,
    0b01100110,
    0b11011011,
    0b00011000,
    0b00000000,
    0b00000000,
    0b00011000,
    0b00111100,
    0b01100110,
    0b11011011,
    0b00011000,
    0b00011000,
    0b00000000,
    0b00000000,
    0b00111100,
    0b01100110,
    0b11011011,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00000000,
    0b00000000,
    0b01100110,
    0b11011011,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b11011011,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00011000,
    0b00011000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00011000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000};
const int ARROW_UP_LEN = sizeof(ARROW_UP) / EIGHT_BY_EIGHT_ROW_COUNT;

// pillars
const byte PILLARS[] = {
    0b11111111,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b11111111,
    0b01010101,
    0b01010101,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b10101010,
    0b10101010,
    0b01010101,
    0b01010101,
    0b01010101,
    0b00000000,
    0b00000000,
    0b10101010,
    0b10101010,
    0b10101010,
    0b01010101,
    0b01010101,
    0b01010101,
    0b01010101,
    0b10101010,
    0b10101010,
    0b10101010,
    0b10101010,
    0b01010101,
    0b01010101,
    0b01010101,
    0b11111111,
    0b11111111,
    0b10101010,
    0b10101010,
    0b10101010,
    0b01010101,
    0b01010101,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b10101010,
    0b10101010,
    0b01010101,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b10101010,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b10101010,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b01010101,
    0b10101010,
    0b10101010,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b01010101,
    0b01010101,
    0b10101010,
    0b10101010,
    0b10101010,
    0b11111111,
    0b11111111,
    0b01010101,
    0b01010101,
    0b01010101,
    0b10101010,
    0b10101010,
    0b10101010,
    0b10101010,
    0b01010101,
    0b01010101,
    0b01010101,
    0b01010101,
    0b10101010,
    0b10101010,
    0b10101010,
    0b00000000,
    0b00000000,
    0b01010101,
    0b01010101,
    0b01010101,
    0b10101010,
    0b10101010,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b01010101,
    0b01010101,
    0b10101010,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b01010101,
    //  0b00000000,
    //  0b00000000,
    //  0b00000000,
    //  0b00000000,
    //  0b00000000,
    //  0b00000000,
    //  0b00000000,
    //  0b00000000}
};
const int PILLARS_LEN = sizeof(PILLARS) / EIGHT_BY_EIGHT_ROW_COUNT;

// fat Stripes
const byte FAT_STRIPES[] = {
    0b00000001,
    0b00000011,
    0b00000111,
    0b00001111,
    0b00011111,
    0b00111111,
    0b01111111,
    0b11111111,
    0b10000000,
    0b00000001,
    0b00000011,
    0b00000111,
    0b00001111,
    0b00011111,
    0b00111111,
    0b01111111,
    0b11000000,
    0b10000000,
    0b00000001,
    0b00000011,
    0b00000111,
    0b00001111,
    0b00011111,
    0b00111111,
    0b11100000,
    0b11000000,
    0b10000000,
    0b00000001,
    0b00000011,
    0b00000111,
    0b00001111,
    0b00011111,
    0b11110000,
    0b11100000,
    0b11000000,
    0b10000000,
    0b00000001,
    0b00000011,
    0b00000111,
    0b00001111,
    0b11111000,
    0b11110000,
    0b11100000,
    0b11000000,
    0b10000000,
    0b00000001,
    0b00000011,
    0b00000111,
    0b11111100,
    0b11111000,
    0b11110000,
    0b11100000,
    0b11000000,
    0b10000000,
    0b00000001,
    0b00000011,
    0b11111110,
    0b11111100,
    0b11111000,
    0b11110000,
    0b11100000,
    0b11000000,
    0b10000000,
    0b00000001,
    0b11111111,
    0b11111110,
    0b11111100,
    0b11111000,
    0b11110000,
    0b11100000,
    0b11000000,
    0b10000000,
    0b01111111,
    0b11111111,
    0b11111110,
    0b11111100,
    0b11111000,
    0b11110000,
    0b11100000,
    0b11000000,
    0b00111111,
    0b01111111,
    0b11111111,
    0b11111110,
    0b11111100,
    0b11111000,
    0b11110000,
    0b11100000,
    0b00011111,
    0b00111111,
    0b01111111,
    0b11111111,
    0b11111110,
    0b11111100,
    0b11111000,
    0b11110000,
    0b00001111,
    0b00011111,
    0b00111111,
    0b01111111,
    0b11111111,
    0b11111110,
    0b11111100,
    0b11111000,
    0b00000111,
    0b00001111,
    0b00011111,
    0b00111111,
    0b01111111,
    0b11111111,
    0b11111110,
    0b11111100,
    0b00000011,
    0b00000111,
    0b00001111,
    0b00011111,
    0b00111111,
    0b01111111,
    0b11111111,
    0b11111110};
const int FAT_STRIPES_LEN = sizeof(FAT_STRIPES) / EIGHT_BY_EIGHT_ROW_COUNT;

// spinner
const byte SPINNER[] = {
    0b00000000,
    0b00000000,
    0b00000000,
    0b00001000,
    0b00010000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00100000,
    0b00010000,
    0b00001000,
    0b00000100,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000010,
    0b00000100,
    0b00001000,
    0b00010000,
    0b00100000,
    0b01000000,
    0b00000000,
    0b10000000,
    0b01000000,
    0b00100000,
    0b00010000,
    0b00001000,
    0b00000100,
    0b00000010,
    0b00000001,
    0b00000000,
    0b00000010,
    0b00000100,
    0b00001000,
    0b00010000,
    0b00100000,
    0b01000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00100000,
    0b00010000,
    0b00001000,
    0b00000100,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00001000,
    0b00010000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00010000,
    0b00001000,
    0b00000000,
    0b00000000,
    0b00000000};
const int SPINNER_LEN = sizeof(SPINNER) / EIGHT_BY_EIGHT_ROW_COUNT;

const byte PEAK_AND_VALLEY[] = {
    0b00000000,
    0b00000000,
    0b00000000,
    0b00001000,
    0b00011100,
    0b00111110,
    0b01111111,
    0b11111111,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000100,
    0b00001110,
    0b00011111,
    0b10111111,
    0b11111111,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000010,
    0b00000111,
    0b10001111,
    0b11011111,
    0b11111111,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000001,
    0b10000011,
    0b11000111,
    0b11101111,
    0b11111111,
    0b00000000,
    0b00000000,
    0b00000000,
    0b10000000,
    0b11000001,
    0b11100011,
    0b11110111,
    0b11111111,
    0b00000000,
    0b00000000,
    0b00000000,
    0b01000000,
    0b11100000,
    0b11110001,
    0b11111011,
    0b11111111,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00100000,
    0b01110000,
    0b11111000,
    0b11111101,
    0b11111111,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00010000,
    0b00111000,
    0b01111100,
    0b11111110,
    0b11111111};
const int PEAK_AND_VALLEY_LEN = sizeof(PEAK_AND_VALLEY) / EIGHT_BY_EIGHT_ROW_COUNT;

#endif